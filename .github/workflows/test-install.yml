name: Test installation

on:
  pull_request:

  push:
    branches:
      - master

jobs:
  test-install:
    name: Test pip install

    defaults:
      run:
        shell: bash {0}

    strategy:
      fail-fast: false

      matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version: ["3.7", "3.10"]
          nocc: [false]

          include:
            # also test whether installation without C compiler works
            - os: ubuntu-latest
              python-version: "3.7"
              nocc: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install CUDA
        if: runner.os == "Linux"
        run: |
          sudo apt-get update
          sudo apt-get install nvidia-cuda-toolkit

      - name: Test installing Veros
        run: |
          if ${{ matrix.nocc }}; then export CC=foobar; fi
          python -m pip install .

      - name: Test building extensions
        if: matrix.nocc != "true"
        run: |
          pip install cython
          python setup.py build_ext --inplace
          test -f veros/core/special/tdma_cython_.*.so
          test -f veros/core/special/tdma_cuda_.*.so
